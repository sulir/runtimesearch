<idea-plugin url="https://sulir.github.io/runtimesearch/">
    <id>com.github.sulir.runtimesearch</id>
    <name>RuntimeSearch</name>
    <vendor url="https://sulir.github.io" email="matus.sulir@gmail.com">Matúš Sulír</vendor>

    <description><![CDATA[
        <p>Searches for occurrences of strings in a debugged program.<p>
        <p>Before using, enable the plugin for the selected <b>Debug Configuration</b> under <b>RuntimeSearch Settings</b> (this can incur minor runtime performance overhead).</p>
        <p>To start searching, select <b>Run | Find in Runtime</b>, enter the searched string and press Find. If the program is not yet being debugged, a new process will be started. Then interact with the running application. As soon as any string expression in the program will contain the searched string (substrings are matched), the process will be paused. You can use traditional debugging actions (e.g., Step Over) or search for the next occurrence via <b>Run | Find Next in Runtime</b>.</p>
        <p>For a tutorial and a sample use case, watch the <a href="https://sulir.github.io/runtimesearch/#video">video</a>.</p>
    ]]>
    </description>

    <idea-version since-build="201.6668.113"/>
    <depends>com.intellij.modules.java</depends>
    <resource-bundle>messages</resource-bundle>

    <actions>
        <group id="RuntimeSearchMenu">
            <separator/>
            <action id="RuntimeFind" class="com.github.sulir.runtimesearch.plugin.RuntimeFindAction">
                <keyboard-shortcut keymap="$default" first-keystroke="shift alt F2"/>
            </action>
            <action id="RuntimeFindNext" class="com.github.sulir.runtimesearch.plugin.RuntimeFindNextAction">
                <keyboard-shortcut keymap="$default" first-keystroke="shift alt F3"/>
            </action>
            <add-to-group group-id="RunMenu" anchor="last"/>
        </group>
    </actions>

    <extensions defaultExtensionNs="com.intellij">
        <projectService serviceImplementation="com.github.sulir.runtimesearch.plugin.RuntimeFindManager"/>
        <runConfigurationExtension
                implementation="com.github.sulir.runtimesearch.plugin.config.RuntimeSearchRunConfigExtension"/>
        <xdebugger.breakpointType
                implementation="com.github.sulir.runtimesearch.plugin.breakpoint.RuntimeBreakpointType"/>
        <debugger.javaBreakpointHandlerFactory
                implementation="com.github.sulir.runtimesearch.plugin.breakpoint.RuntimeBreakpointHandlerFactory"/>
    </extensions>

    <projectListeners>
        <listener class="com.github.sulir.runtimesearch.plugin.breakpoint.PauseHandler"
                  topic="com.intellij.debugger.impl.DebuggerManagerListener"/>
    </projectListeners>
</idea-plugin>